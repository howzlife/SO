= simple_form_for @purchase_order do |f|
	- if @purchase_order.status == "draft"
		= render :partial => "shared/header", :locals => {:title => @purchase_order.number, :icon => "fa-pencil-square-o", :hasbutton => true, :button => "Edit PO", :hasstatus => true, :status => @purchase_order.status }
	- else
		= render :partial => "shared/header", :locals => {:title => "New Purchase Order",:icon => "fa-pencil-square-o", :hasbutton => true, :button => "New PO" }
	- if @purchase_order.errors.any?
		#error_explanation
			%h2= "#{pluralize(@purchase_order.errors.count, "error")} prohibited this purchase_order from being saved:"
			%ul
				- @purchase_order.errors.full_messages.each do |msg|
					%li= msg
	- if @purchase_order.number.blank? 
		- ponumber = @company.prefix + '.' + number_with_delimiter([*100000..999999].sample, :delimiter => '.')
	- else
		- ponumber = @purchase_order.number
	.wrapper
		.card.purchaseorder
			.purchaseorder-header.clear
				.purchaseorder-company
					= @company.name
				.purchaseorder-address
					=@company.name
					%br
					=@company.email
				.purchaseorder-from
					.text-label From
					=@company.name
					%br
					=@company.email
					.section
						.text-label Sent By
						= current_user.first_name
						= current_user.last_name
				.purchaseorder-number
					.text-label Purchase Order
					.number
						= ponumber
						= f.hidden_field :number, :value => ponumber
					.section
						.text-label Date
						.date
							=@purchase_order.date.strftime("%B #{@purchase_order.date.day.ordinalize}, %Y")
			.purchaseorder-vendor.clear
				.to.vendor
					.text-label Send To
				.vendor-select
					-# the instance variable below isn't the vendor document that embedded in the purchase order. It's the one embedded in the company. We use the vendors created there in this form. The data from them is then saved to the purchase order's embedded vendor document. We allow vendor information to be changed for the company but not on the purchase orders. This way, if the Company's vendor data changes, the already saved purchase orders' vendor data doesn't. This vendor data is being passed as a hash string. 
					= f.select :vendor, @company.vendors.all.map { |r| [r.name, r.id] }, :include_blank => "Select Vendor"
					.vendor-select-text.search-query
						.vendor-selected
						%input.vendor-select-input{:type => "text",:placeholder => "Vendor name"}/
					.vendor-select-list
						.list-body
						.list-footer
							= link_to new_vendor_path do
								%span.text Create New Vendor						
							= link_to vendors_path do
								%span.text Manage Vendors			
					- if !@purchase_order.vendor.name.blank?
						=@purchase_order.vendor.name
						%br
						- if !@purchase_order.vendor.contact.blank?
							Attention: #{@purchase_order.vendor.contact}
							%br
						- if !@purchase_order.vendor.email.blank?
							=@purchase_order.vendor.email
					.vendor-details
				.date-required
					.text-label Date Required
					.date-field
						= f.input :date_required, :placeholder => "ASAP", :input_html => { :value => 'ASAP' }, :id => "datepicker"
			.purchaseorder-description
				.text-label Description
			.purchaseorder-input
				= f.label :description
				= f.text_area :description, :placeholder => "enter your order information..."
			.purchaseorder-deliverto.clear
				.to
					.text-label Ship To

				.deliverto-select
					= f.select :address, @company.addresses.all.map { |r| [r.name, r.id] }, :include_blank => "Select Address"
					.deliverto-select-text.search-query
						.deliverto-selected
						%input.deliverto-select-input{:type => "text",:placeholder => "Address"}/
					.deliverto-select-list
						.list-body
						.list-footer
							= link_to new_address_path do
								%span.text Create New Address						
							= link_to edit_company_path(@company) do
								%span.text Manage Addresses			
					.deliverto-details

		.buttons
			= button_tag(type: 'submit', :disabled => true, :name => "status", :value => "email", :data => { :confirm => 'Are you sure? Once you email this purchase order, you will not be able to edit its contents.' }, class: "btn btn-email") do
				%span.text Send by Email
			= button_tag(type: 'submit', :disabled => true, :name => "status", :value => "fax", :data => { :confirm => 'Are you sure? Once you fax this purchase order, you will not be able to edit its contents.' }, class: "btn btn-fax") do
				%span.text Send by Fax
	.divider.no-print
	.wrapper.section.clear.no-print
		.section-description
			%h3 Internal Use
			%p Use this area to add additional information about this purchase order.
		.section-content
			.card
				= f.input :label, label: 'Label', :placeholder => "enter a label..."
